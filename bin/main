#!/usr/bin/env ruby

require_relative '../lib/board.rb'
require_relative '../lib/player.rb' 

puts 'Hi, Welcome to TicTacToe game'

puts 'Insert name of two players: '

# Creating player object 

player1 = Player.new (gets.chomp.to_s)
player2 = Player.new (gets.chomp.to_s)

players = [player1, player2]

puts "Hi #{players[0].name} and #{players[1].name}, welcome to tictactoe game: "

board = Board.new

print board.display_board

puts "Ok #{players[0].name} please pick your symbol: "

players[0].pick_symbol(gets.chomp.to_s)

puts "Ok #{players[1].name} please pick your symbol: "

players[1].pick_symbol(gets.chomp.to_s)

puts "#{players[0].name} choses #{players[0].sym}"
puts "#{players[1].name} choses #{players[1].sym}"

flag = 'Y'

while flag == 'Y'

  i = 0

  puts 'Game is ready. Now pick the player for the first move: '

  name_match = false

  until name_match == true
    beginner = gets.chomp.to_s
    name_match = true
    next if beginner == players[0].name

    name_match = false
    if beginner == players[1].name
      name_match = true
      players[0], players[1] = players[1], players[0]      
    else
      puts 'wrong input, Please insert correct player name: '
    end
  end

  puts "#{players[0].name} will start'"  

  while i < 9

    current_player = players[i % 2]

    puts "@ #{current_player.name}, now your turn. Pick a cell which has available spot: "

    print board.display_board

    pick = gets.chomp.to_i - 1
    

    while (board.symbol[pick] != ' ') || !(0..10).cover?(pick)

      puts 'wrong input. Please pick another cell no.: '
      pick = gets.chomp.to_i - 1

    end

    board.symbol[pick] = current_player.sym

    board.update_board(pick, current_player)

    print board.display_board

    win_move = 9

    draw_move = 0
    draw_move = pick + 1 if i == 8

    game_flag = 0

    case pick.to_i
    when win_move - 1
      puts 'You made the winning move. You won!!!'
      game_flag = 1
    when draw_move - 1
      puts 'Game ends with draw result'
    else
      puts "You picked cell no. #{pick + 1}"
    end

    break unless game_flag.zero?

    i += 1
  end

  puts 'Game is over. Would you like to continuue? (Y) or quit? (N): '

  flag = gets.chomp.to_s

end
