#!/usr/bin/env ruby
def display_board
  puts ' | | '
  puts '------'
  puts ' | | '
  puts '------'
  puts ' | | '
end

puts 'Hi, Welcome to TicTacToe game'

puts 'Please Insert the Match Name'

match_name = gets.chomp

puts "Match name is #{match_name}"

puts 'Insert name of players: '

players = []

players << gets.chomp.to_s
players << gets.chomp.to_s

puts "Hi #{players[0]} and #{players[1]}, welcome to tictactoe game: "

puts 'Now you insert the size of your tictactoe board, which is number of cells in row or column: '

rows = gets.chomp.to_i

puts "You have created a #{rows} by #{rows} board"

print display_board

puts "Ok #{players[0]} please pick your symbol: "

sym1 = gets.chomp.to_s

puts "Ok #{players[1]} please pick your symbol: "

sym2 = gets.chomp.to_s

puts "#{players[0]} choses #{sym1}"
puts "#{players[1]} choses #{sym2}"

flag = 'Y'

while flag == 'Y'

  i = 0

  puts 'Game is ready. Now pick the player for the first move: '

  beginner = gets.chomp.to_s

  unless beginner == players[0]
    if beginner == players[1]
      a = players[0]
      players[0] = players[1]
      players[1] = a
    else
      puts 'wrong input'
    end
  end

  puts "#{players[0]} will start'"

  moves = rows**2

  moves_arr = []

  while i <= moves

    current_player = players[i % 2]

    puts "@ #{current_player}, now your turn. Pick a cell which has available spot: "

    print display_board

    pick = gets.chomp

    while moves_arr.any?(pick)

      puts 'wrong input. Please pick another cell no.: '
      pick = gets.chomp

    end

    print display_board

    win_move = 4
    draw_move = 7

    moves_arr << pick

    game_flag = 0

    case pick.to_i
    when win_move
      puts 'You win the game'
      game_flag = 1
    when draw_move
      puts 'Game ends with draw'
      game_flag = 1
    else
      puts "You picked cell no. #{pick}"
    end

    break unless game_flag.zero?

    i += 1
  end

  puts 'Game is over. Would you like to continuue? (Y) or quit? (N): '

  flag = gets.chomp.to_s

end
